<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cx.mybatis.dao.EmployeeMapperPlus">

	<!-- 自定义某个Java Bean的封装规则 
		type：自定义规则的Java类型
		id:唯一id方便引用
	-->
	<resultMap type="com.cx.mybatis.bean.Employee" id="MyEmp">
	
		<!-- 指定主键列的封装规则 
			id：定义主键会有底层的优化
			column:指定哪一列
			property：指定对应的JavaBean属性
		-->
		<id column="id" property="id"/>
		
		<!-- 定义普通列的封装规则
			column:指定哪一列
			property：指定对应的JavaBean属性
		 -->
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="gender" property="gender"/>
		
		<!-- 其他不指定的列会自动封装：我们只要写resultMap就把全部的映射规则都血写上-->
	</resultMap>
	<!-- 
		resultMap:自定义结果集映射规则
	 -->
	<select id="getEmpById"  resultMap="MyEmp">
		select * from tbl_employee where id = #{id}
	</select>
	
	<!-- 
		场景一：
			查询Employee的同时，查出员工对应的部门
			Employee===Department
			一个员工有与之对应的部门信息
				id, last_name, gender, d_id, did, dept_name
				1	chen		0		1		1	开发部
	 -->
	 <!-- 
	 	联合查询：级联属性封装结果集
	  -->
	 <resultMap type="com.cx.mybatis.bean.Employee" id="MyDifEmp">
	 	<id column="id" property="id"/>
	 	<result column="last_name" property="lastName"/>
	 	<result column="gender" property="gender"/>
	 	<result column="did" property="dept.id"/>
	 	<result column="dept_name" property="dept.departmentName"/>
	 </resultMap>
	 
	 <!-- 
	 	使用association定义关联的单个对象的封装规则
	  -->
	 <resultMap type="com.cx.mybatis.bean.Employee" id="MyDifEmp2">
	 	<id column="id" property="id"/>
	 	<result column="last_name" property="lastName"/>
	 	<result column="gender" property="gender"/>
	 	<!-- association指定联合的JavaBean对象 
	 		property指定那个属性是联合的对象
	 		javaType指定这个属性对象的类型[不能省略]
	 		-->
	 	<association property="dept" javaType="com.cx.mybatis.bean.Department">
	 		<id column="did" property="id"/>
	 		<result column="dept_name" property="departmentName"/>
	 	</association>
	 </resultMap>
	 
	 <select id="getEmpAndDept" resultMap="MyDifEmp2">
	 	select e.id id,e.last_name last_name,e.gender gender,e.d_id d_id,d.id did,d.dept_name dept_name 
	 	from tbl_employee e,tbl_dept d
	 	where e.d_id = d.id and e.id=#{id}
	 </select>
</mapper>