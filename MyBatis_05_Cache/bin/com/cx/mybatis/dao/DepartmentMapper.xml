<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cx.mybatis.dao.DepartmentMapper">

	<!-- 引用缓存：namespace：制定和那个名称空间下的引用 -->
	<cache-ref namespace="com.cx.mybatis.dao.EmployeeMapper"/>
	
		
	<select id="getDeptById" resultType="com.cx.mybatis.bean.Department">
		select id,dept_name departmentName from tbl_dept where id=#{id}
	</select>
	
	<!-- 
		collection嵌套结果集的方式，定义关联的集合类型元素的封装规则
	 -->
	<resultMap type="com.cx.mybatis.bean.Department" id="myDept">
		<id column="did" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<!-- collection定义关联集合类型的属性的封装规则
			 ofType:指定集合里面的元素类型
		 -->
		<collection property="employees" ofType="com.cx.mybatis.bean.Employee">
			<!-- 定义集合中元素的封装规则 -->
			<id column="eid" property="id"/>
			<result column="last_name" property="lastName"/>
			<result column="email" property="email"/>
			<result column="gender" property="gender"/>
		</collection>
	</resultMap>
	<select id="getDeptByIdPlus" resultMap="myDept">
		 select d.id did,d.dept_name dept_name,e.id eid,e.last_name last_name,e.email email,e.gender gender
		 from tbl_dept d
		 left join tbl_employee e on d.id = e.d_id
		 where d.id = #{id}
	</select>
	
	<resultMap type="com.cx.mybatis.bean.Department" id="myDeptStep">
		<id column="id" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<collection property="employees" select="com.cx.mybatis.dao.EmployeeMapperPlus.getEmpsByDeptId" 
			column="{deptId=id}" fetchType="lazy">
			
		</collection>
	</resultMap>
	<select id="getDeptByIdStep" resultMap="myDeptStep">
		select id,dept_name departmentName from tbl_dept where id=#{id}
	</select>
	
	<!-- 
		扩展：将多列的值传递过去
		将多列的值封装map传递
		column="{key1=column1,key2=column2}"
		fetchType="lazy"：表示使用延迟加载
			lazy表示延迟加载
			eager：立即加载
	 -->
</mapper>